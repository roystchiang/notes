#!/usr/bin/env python

# let's say you have a C++ project in Nix that you want to work on with CLion so that the Nix dependencies are available
# put this script in your project directory
# then, in Settings -> Build, Execution, Deployment -> Toolchains set CMake to this script
# if you need any extra nix-shell arguments, add them to the invocation at the bottom

import os
import sys
import shlex
import pipes


scriptDir = os.path.dirname(os.path.realpath(__file__))

args = list(map(pipes.quote, sys.argv[1:]))

# Use the cmakeFlags set by Nix - this doesn't work with --build
if "--build" not in args:
  args.insert(0, "$cmakeFlags")

cwd = os.getcwd()
cmd = 'cd ' + cwd + ' && cmake ' + ' '.join(args)

os.chdir(scriptDir)
os.execvp("nix-shell", [
  'nix-shell',
  '--pure',
  '--run', cmd
  ])
